/*REXX*****************************************************************/
/*  NAME      -  AATX070                                              */
/*  PROJECT   -  ABEND-AID TOOLS (AAT)                                */
/*  TYPE      -  REXX PROGRAM                                         */
/*  FUNCTION  -  DISPLAYS PANEL AATP070 TO COLLECT INFORMATION ON AN  */
/*               INDEX CELL TO BE LOCATED AND VALIDATED IN THE DUMP.  */
/*               THE USER ENTERS DATA SUCH AS FIELD NAME, INDEX CELL  */
/*               NUMBER, OCCURS NUMBER, AND LENGTH OF OCCURRING ITEM. */
/*               WHEN DATA ENTERED ON PANEL AATP070 IS CORRECT, PANEL */
/*               PANEL AATP071 TO TELL THE USER HOW TO FIND THE INDEX */
/*               CELL IN THE ABEND-AID DUMP, AND OBTAINS ITS VALUE    */
/*               FROM THE USER. FINALLY, THE AATP074 PANEL IS SHOWN   */
/*               TO ANALYZE THE INDEX CONTENT AND PROVIDE THE EQUIV-  */
/*               ALENT OCCURRENCE NUMBER.                             */
/*  CALLED BY -  PANEL AATP000                                        */
/*  RELATED   -  PANELS AATP071, AATH070, AND MSG AATM07              */
/*  CALLS     -  AATX074                                              */
/*  AUTHOR    -  DICK THORNTON JAN 2000                               */
/**********************************************************************/
/**********************************************************************/
/*  THE PROGRAM RUNS IN A NEVER ENDING LOOP UNTIL THE USER HITS PF3   */
/*  1. INITIALIZE VARIABLES.                                          */
/*  2. DISPLAY THE AATP070 PANEL TO OBTAIN THE FIELD VARIABLE INFO.   */
/*  3. ON RETURN FROM PANEL AATP070, EXIT IF THE USER HAS HIT PF3.    */
/*  4. VALIDATE THE USER SUPPLIED VARIABLES. IF ANY ERROR OCCURS,     */
/*     REDISPLAY AATP070 WITH AN ERROR MESSAGE AND THE CURSOR SET ON  */
/*     THE FIELD IN ERROR.                                            */
/*  5. SET UP VARIABLES FOR THE AATP071 PANEL.                        */
/*  6. DISPLAY THE AATP071 TO OBTAIN THE VALUE IN THE INDEX.          */
/*  7. ON RETURN DISPLAY PANEL AATP074 TO SHOW DATA ANALYSIS.         */
/*  8. REPEAT STEPS 1-9.                                              */
/**********************************************************************/
/* TRACE ?ALL */
NUMERIC DIGITS 32             /* SET NUMBER DIGITS FOR CALCULATIONS */
DO FOREVER
   FLDNAME = ''; IDX = ''; OCCLEN = ''; OCCNBR = ''; ABIDX = ''
   ERROR = 1; ERRMESG = ''; CURSLOC = 'FLDNAME';
   DO FOREVER
      ADDRESS ISPEXEC 'DISPLAY PANEL(AATP070)'
      IF RC ¬= 0 THEN EXIT    /* ASSUME PF3 HIT OF RC IS NOT 0 */
      ERROR = 0; ERRMESG = ''; CURSLOC = 'FLDNAME'
      CALL VALIDATE           /* VALIDATE PANEL VARIABLES */
      IF ERROR ¬= 0 THEN ITERATE /* IF ERROR, RE-DISPLAY AATP070 */
      HEXDATA = ''
      DO FOREVER
         ADDRESS ISPEXEC 'DISPLAY PANEL(AATP071)'  /* GET INDEX VALUE */
         IF RC ¬= 0 THEN EXIT    /* ASSUME PF3 HIT IF RC IS NOT 0 */
         IF (LENGTH(HEXDATA) = 8) THEN LEAVE
         ELSE DO
            ERRMESG = 'AATM073'  /* HEX REQUIRES 2 DIGITS PER BYTE */
            CURSLOC = 'HEXDATA'
            ITERATE
         END
      END
      ERROR = 0; ERRMESG = ''; CURSLOC = 'FLDNAME'
      ADDRESS ISPEXEC "VPUT (FLDNAME IDX OCCLEN OCCNBR " ||,
         "HEXDATA ABIDX ERRMESG CURSLOC) SHARED"
      CALL AATX074            /* VALIDATE FIELD DATA */
   END
END
/********************************************************************/
/*  VALIDATE THE VARIABLE DATA ENTERED BY THE USER AND BUILD THE    */
/*  ADDITIONAL VARIABLES FOR THE AATP071 PANEL.                     */
/********************************************************************/
VALIDATE:
   IF (OCCNBR <= 1) THEN DO
      ERROR = 1
      ERRMESG = 'AATM070'        /* OCCNBR MUST BE > 0 */
      CURSLOC = 'OCCNBR'
      RETURN
   END
   ABIDX = X2D(IDX) - 1          /* COMPUTE ABEND-AID INDEX NUMBER */
   IF ABIDX < 0 THEN DO
      ERROR = 1
      ERRMESG = 'AATM075'       /* COBOL IDX= NUMBERS ARE > 0 */
      CURSLOC = 'IDX'
   END
   ELSE
      ABIDX = D2X(ABIDX)
RETURN
